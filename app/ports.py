from datetime import date
from typing import Protocol

from .schemas import CustomerWithId, OrderCreateResponse, ProductWithId


class CustomersRepo(Protocol):
    def by_id(self, cust_id: str) -> CustomerWithId | None: ...
    def save(self, c: CustomerWithId) -> None: ...
    def exists_email(self, email: str) -> bool: ...
    def exists_id(self, cust_id: str) -> bool: ...


class ProductsRepo(Protocol):
    def by_id(self, prod_id: str) -> ProductWithId | None: ...
    def by_name_norm_exists(self, name_norm: str) -> bool: ...
    def save(self, p: ProductWithId) -> None: ...
    def exists_id(self, prod_id: str) -> bool: ...


class OrdersRepo(Protocol):
    def by_id(self, order_id: str) -> OrderCreateResponse | None: ...
    def save(self, o: OrderCreateResponse, cust_id: str) -> None: ...
    def exists_id(self, order_id: str) -> bool: ...
    def search(
        self,
        cust_id: str | None,
        frm: date | None,
        to: date | None,
        page: int,
        size: int,
    ) -> tuple[list[OrderCreateResponse], int]: ...


class UoW(Protocol):
    customers: CustomersRepo
    products: ProductsRepo
    orders: OrdersRepo

    def commit(self) -> None: ...
    def rollback(self) -> None: ...
